steps:
  - id: "docker-build"
    name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/${_IMAGE_NAME}", "."]
#  - id: "docker-push"
#    name: "gcr.io/cloud-builders/docker"
#    args: ["push", "${_IMAGE_NAME}"]
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}'
    id: push image orginal
#  - id: "docker-layer"
#    name: "gcr.io/cloud-builders/docker"
#    entrypoint: /bin/bash
#    args:
#      - '-c'
#      - |
#        echo "FROM gcr.io/$PROJECT_ID/${_IMAGE_NAME}
#        RUN ls
#        COPY --from=gcr.io/cloudsql-docker/gce-proxy /cloud_sql_proxy app/cloudsql/cloud_sql_proxy" > Dockerfile-proxy;
#        docker build -f Dockerfile-proxy -t gcr.io/$PROJECT_ID/${_IMAGE_NAME}-proxy .
#  # For TCP connections
#  - name: gcr.io/cloud-builders/docker
#    args:
#      - push
#      - 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}-proxy'
#    id: push image
  - id: "install-proxy"
    name: "gcr.io/$PROJECT_ID/${_IMAGE_NAME}"
    entrypoint: sh
    args:
      - -c
      - "wget -O /app/cloud_sql_proxy https://storage.googleapis.com/cloudsql-proxy/v1.16/cloud_sql_proxy.linux.386 &&  chmod +x /app/cloud_sql_proxy"
  - id: "migrate-tcp"
    name: "gcr.io/$PROJECT_ID/${_IMAGE_NAME}"
    entrypoint: /bin/bash
    dir: app
    args:
      - '-c'
      - |
        ./cloud_sql_proxy -instances=tcl-execrcies:us-central1:tcl-exercises=tcp:5432 & sleep 2;
        npm install && npm run migrate # for example
options:
  dynamic_substitutions: true
timeout: "1200s"